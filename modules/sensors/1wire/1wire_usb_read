#! /bin/bash

# USB
dir=$( cd "$( dirname "$0" )" && cd ../../../ && pwd )
date=`date +%y%m%d-%H%M`

usb=`sqlite3 $dir/dbf/nettemp.db "SELECT usb FROM device"`
if [ "$usb" != "off" ]; then
    rom=$(sqlite3 $dir/dbf/nettemp.db "SELECT rom FROM sensors WHERE rom LIKE '0x28%'")
    for name in $rom; do
        name_1=$(echo $name |sed 's/..../& /g;s/+$//')
	num=`cat $dir/tmp/.digitemprc |grep "$name_1" |awk 'BEGIN {FS=" "} {print $2}'`


if [ "$usb" = "DS2490" ]; then
        wynik=`/usr/bin/digitemp_$usb -c $dir/tmp/.digitemprc -t $num -q -o%.1C |grep -v Found`
else 
        wynik=`/usr/bin/digitemp_$usb -c $dir/tmp/.digitemprc -t $num -q -o%.1C`
fi
    usb_temp_calc=$(echo $wynik 125 -55 85 85.0 | awk '{if ($1 < $2 && $1 > $3 && $1 != $4 && $1 != $5 && $1 ~ /[0-9]/ ) print 1; else print 0 }')
    if [ "$usb_temp_calc" == "1" ]; then 
        echo USB: $wynik C
	if [ -s $dir/db/$name.sql ]; then
	    sqlite3 $dir/db/$name.sql "INSERT OR IGNORE INTO def (value) VALUES ('$wynik');"
	    else
	    echo "zero file size"
	fi
        sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='$wynik' WHERE rom='$name_0'"
    else 
        echo "error $wynik" 
        sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='error' WHERE rom='$name_0'"
        echo "$date temp_dev_read - reading sensor error 85C (resistor, or calbe problem) $name " >> $dir/tmp/log.txt    
    fi

done
fi

unset wynik
