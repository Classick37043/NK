#! /bin/bash

#dir0=`find / -name config_nettemp.php 2> /dev/null | sed 's/..................$//' | cut -c 1-`
#dir=`cat $dir0/config_nettemp.php |grep dir | cut -c 5-`

dir=/var/www/nettemp
date=`date +%y%m%d-%H%M`

if [ ! -e $dir/tmp/log.txt ]; then
touch $dir/tmp/log.txt
chmod 775 $dir/tmp/log.txt
chown root.www-data $dir/tmp/log.txt 
fi

usb=`sqlite3 $dir/dbf/nettemp.db "SELECT usb FROM device"`
serial=`sqlite3 $dir/dbf/nettemp.db "SELECT serial FROM device"`
onewire=`sqlite3 $dir/dbf/nettemp.db "SELECT onewire FROM device"`

echo "$date temp_dev_read - read sensors" >> $dir/tmp/log.txt

db=`ls $dir/db/`
if [[ -z "$db" ]]; then 
echo "no sensors added"
exit
fi

#########
#
# USB
#
#########

if [ "$usb" == "off" ]; then
echo "no USB"
else

for name in $db
do
name_str=${#name}

if [ $name_str -gt "19" ]; then 

name_1=`echo $name |awk 'sub("....$", "")' | sed 's/_/ /g'`
name_3=`echo $name_1 | sed ':a;$!{N;s/\n//;ba;};s/..../& /g'`
name_2=`cat $dir/tmp/.digitemprc |grep "$name_3" |awk 'BEGIN {FS=" "} {print $2}'`


if [ "$usb" = "DS2490" ]; then
	    wynik=`/usr/bin/digitemp_$usb -c $dir/tmp/.digitemprc -t $name_2 -q -o%.1C |grep -v Found`
else 
	    wynik=`/usr/bin/digitemp_$usb -c $dir/tmp/.digitemprc -t $name_2 -q -o%.1C`
fi
    if [ "$wynik" != "85" ] && [ "$wynik" != "85.0" ] && [[ "$wynik" = *[!0-9]* ]]; then
	    echo $wynik C
	    rrdtool update $dir/db/$name N:$wynik
	    sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='$wynik' WHERE rom='$name_1'"
    else 
	    echo "error $wynik" 
	    sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='error' WHERE rom='$name_1'"
	    echo "$date temp_dev_read - reading sensor error 85C (resistor, or calbe problem) $name " >> $dir/tmp/log.txt    
    fi

fi
done
fi

unset wynik 

#########
#
# Serial
#
#########

if [ "$serial" == "off" ]; then
echo "no serial"
else

for name in $db
do
name_str=${#name}

if [ $name_str -gt "19" ]; then 

name_1=`echo $name |awk 'sub("....$", "")' | sed 's/_/ /g'`
name_3=`echo $name_1 | sed ':a;$!{N;s/\n//;ba;};s/..../& /g'`
name_2=`cat $dir/tmp/.digitemprc |grep "$name_3" |awk 'BEGIN {FS=" "} {print $2}'`


if [ "$serial" = "DS9097" ]; then
	    wynik=`/usr/bin/digitemp_$serial -c $dir/tmp/.digitemprc -t $name_2 -q -o%.1C`
	    echo $wynik C
fi


    if [ "$wynik" != "85" ] && [ "$wynik" != "85.0" ] ; then
	    rrdtool update $dir/db/$name N:$wynik
	    sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='$wynik' WHERE rom='$name_1'"
    else 
	    echo "$date temp_dev_read - reading sensor error 85C (resistor, or calbe problem) $name " >> $dir/tmp/log.txt    
    fi

fi
done
fi

unset wynik 

##############
#
# 1-wire
#
################

if [ "$onewire" == "off" ]; then
echo "no 1-wire"
else

for name in $db
do
name_str=${#name}

if [ $name_str -lt "20" ] && [ $name_str -gt "11" ]; then
    one_wire_name=`echo $name |awk 'sub("....$", "")'`
    name_1=`cat $dir/tmp/onewire |grep $one_wire_name`
    if [ "$name_1" != "Raspberry_Pi" ]; then    
	if  [ -e /sys/bus/w1/devices/${name_1}/w1_slave ]; then
	    wynik=`awk -F'[ =]' ' $11 ~ /crc/ && $13 ~ /YES/ { getline; printf "%3.1f\n", $11/1000 } ' /sys/bus/w1/devices/${name_1}/w1_slave;`
	    echo $wynik C
	    if  [ -n "$wynik" ]; then
		if [ "$wynik" != "85" ] && [ "$wynik" != "85.0" ]  ; then 
	    		rrdtool update $dir/db/$name N:$wynik
	    		sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='$wynik' WHERE rom='$name_1'"
		else
	    		echo "$date temp_dev_read - reading sensor error 85C (resistor, or calbe problem) $name " >> $dir/tmp/log.txt    
		fi
	    else
		echo "$date temp_dev_read - reading sensor error (CRC OK but no result) $name " >> $dir/tmp/log.txt    
	    fi
	else 
	    echo "$date temp_dev_read - reding sensor error (CRC) $name" >> $dir/tmp/log.txt    
	fi
    fi
fi
done
fi

######################
#
# RaspberryPi temp
#
#######################
wynik="0"

if [ -n "$wynik" ]; then 
    wynik=$(/opt/vc/bin/vcgencmd measure_temp | cut -c 6-9)
    rrdtool update $dir/db/Raspberry_Pi.rrd N:$wynik
    sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='$wynik' WHERE rom='Raspberry_Pi'"
    echo $wynik C
fi

######################
#
# DHT11, 22 Adafruit
#
######################
gpio_list_0=`sqlite3 $dir/dbf/nettemp.db "SELECT gpio FROM gpio where humi_checkbox='on'"`
if [ -n "$gpio_list_0" ]; then 
    for gpio_list in $gpio_list_0; do
	type=`sqlite3 $dir/dbf/nettemp.db "SELECT humi_type FROM gpio where gpio='$gpio_list_0'"`
	sleep 3
	#dht="Temp = 25 *C, Hum = 33 %"   #dht 11
	#dht="Temp =  19.7 *C, Hum = 27.3 %" #dht 22
	dht=`$dir/modules/sensors/Adafruit_DHT $type $gpio_list |grep Temp`
	if [ -n "$dht" ] && [ "$type" = "11" ]; then
    	    eval var1_$gpio_list=`echo $dht | cut -c  8-10`
    	    eval var2_$gpio_list=`echo $dht | cut -c 21-23`
    	    dht_temp=var1_$gpio_list
    	    dht_humi=var2_$gpio_list
    	    echo ${!dht_temp} C
    	    echo ${!dht_humi} %
    	    gpio_name=`sqlite3 $dir/dbf/nettemp.db "SELECT rom FROM sensors where gpio='$gpio_list' AND type='humi'"`
    	    rrdtool update $dir/db/$(echo $gpio_name).rrd N:${!dht_humi}
    	    sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='${!dht_humi}' WHERE rom='$(echo $gpio_name)'"
    	    gpio_name2=`sqlite3 $dir/dbf/nettemp.db "SELECT rom FROM sensors where gpio='$gpio_list' AND type='temp'"`
    	    rrdtool update $dir/db/$(echo $gpio_name2).rrd N:${!dht_temp}
    	    sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='${!dht_temp}' WHERE rom='$(echo $gpio_name2)'"
	elif [ -n "$dht" ] && [ "$type" = "22" ]; then
    	    eval var1_$gpio_list=`echo $dht | cut -c  8-12`
    	    eval var2_$gpio_list=`echo $dht | cut -c 23-27`
    	    dht_temp=var1_$gpio_list
    	    dht_humi=var2_$gpio_list
    	    echo ${!dht_temp}
    	    echo ${!dht_humi}
    	    gpio_name=`sqlite3 $dir/dbf/nettemp.db "SELECT rom FROM sensors where gpio='$gpio_list' AND type='humi'"`
    	    rrdtool update $dir/db/$(echo $gpio_name).rrd N:${!dht_humi}
    	    sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='${!dht_humi}' WHERE rom='$(echo $gpio_name)'"
    	    gpio_name2=`sqlite3 $dir/dbf/nettemp.db "SELECT rom FROM sensors where gpio='$gpio_list' AND type='temp'"`
    	    rrdtool update $dir/db/$(echo $gpio_name2).rrd N:${!dht_temp}
    	    sqlite3 $dir/dbf/nettemp.db "UPDATE sensors SET tmp='${!dht_temp}' WHERE rom='$(echo $gpio_name2)'"
	else 
    	    echo "$date temp_dev_read - Error when reding Humi sensor from gpio $gpio_list" >> $dir/tmp/log.txt    
	fi
    done
else
    echo "no humi"
fi

