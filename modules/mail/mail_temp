#! /bin/bash 

dir=$( cd "$( dirname "$0" )" && cd ../../ && pwd )
date=`date +%y%m%d-%H%M`


onoff=`sqlite3 $dir/dbf/nettemp.db "SELECT mail FROM settings"`

if [ "$onoff" == "on" ]; then

dirs=$dir/tmp/mail
mkdir -p $dirs/hour
date2=`date +%Y%m%d-%H:%M`
get_mail=`sqlite3 $dir/dbf/nettemp.db "SELECT mail FROM recipient WHERE mail_alarm='yes'" | awk '{ printf " "$1 }'`
user=`sqlite3 $dir/dbf/nettemp.db "SELECT user FROM mail_settings"`

function file {
> $2
echo "From: Nettemp Device <$user>" > $2
echo "To: $get_mail" >> $2
echo "Subject: Notification from nettemp" >> $2
#echo "" >> $2
sed -i '$aContent-Type: text/html' $2
sed -i '$aMIME-Version: 1.0' $2
sed -i '$a<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">' $2
sed -i '$a<html>' $2
sed -i '$a<head>' $2
sed -i '$a<meta http-equiv="content-type" content="text/html; charset=ISO-8859-1">' $2
sed -i '$a<style>* { margin: 0; padding: 0; } a {text-decoration: none;} th, td {  padding: 5px;} table, th, td { border: 1px solid black;  border-collapse: collapse;}' $2
sed -i '$a* {font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif;}</style>' $2
sed -i '$a</head>' $2
sed -i '$a<body bgcolor="#ffffff" text="#000000">' $2
sed -i '$a<h4>Hi, this is notification from <a href="http://'$(hostname -I | cut -d' ' -f1)'">nettemp system.</a></br></h4><br>' $2
sed -i '$a<table border="1" style="">' $2
sed -i '$a<tr><th>Name</th><th>Value</th><th>Date</th><th>Status</th></tr><tr>' $2
echo "$1" >> $2
sed -i '$a</tr></table><br><br>' $2
sed -i '$a<a href="http://techfreak.pl/tag/nettemp"> <img src="http://techfreak.pl/wp-content/uploads/2012/12/nettemp.pl_.png" style="width:120px;height:40px;"></a><br>' $2
sed -i '$a</div>' $2
sed -i '$a</body>' $2
sed -i '$a</html>' $2

chmod 777 $2
}

names=() #array for remove old files

if alarms=$(sqlite3 $dir/dbf/nettemp.db "SELECT * FROM sensors WHERE alarm='on'"| sed 's/ /_/g')
    then
    for line in $alarms
    do
	name=`echo $line | awk 'BEGIN {FS="|"}{print $2}'`
        tmp=`echo $line | awk 'BEGIN {FS="|"}{print $4}'`
	tmp_min=`echo $line | awk 'BEGIN {FS="|"}{print $5}'`
	tmp_max=`echo $line | awk 'BEGIN {FS="|"}{print $6}'`
	plik=$dirs/$name.mail
	plik2=$dirs/hour/$name.mail
	
	if [ "$tmp" == "error" ] &&  error=$(sqlite3 $dir/dbf/nettemp.db "SELECT error FROM mail_settings WHERE id='1'")
	    then
		if [ ! -f "$plik2" ] && [ "$error" == "on" ]
		    then
			echo NEW ERROR
			file "Error in $name" $plik
		fi
	elif [ -n "$tmp_max" ] || [ -n "$tmp_min" ] 
	    then
    		cr_ge=$(echo $tmp $tmp_max | awk '{if ($1 > $2) print 1; else print 0 }')
    		cr_le=$(echo $tmp $tmp_min | awk '{if ($1 < $2) print 1; else print 0 }')
            	    if  [ "$cr_ge" == "1" ] && [ -n "$tmp_max" ]
			then
			echo HIGH $name
			if [ ! -f "$plik2" ]
			    then
			    echo NEW MV
			    file "<td>$name</td><td>$tmp</td><td>$date2</td><td bgcolor="#FF0000">HIGH</td>" $plik
			else
            		    echo UPDATE
            		    file "<td>$name</td><td>$tmp</td><td>$date2</td><td bgcolor="#FF0000">HIGH</td>" $plik2
			fi
    		    elif [ "$cr_le" == "1" ] && [ -n "$tmp_min" ]
			then
			echo LOW $name
			if [ ! -f "$plik2" ]
			    then
			    echo NEW MV
			    file "<td>$name</td><td>$tmp</td><td>$date2</td><td bgcolor="#FF0000">LOW</td>" $plik
        	    else
			echo UPDATE
			    file "<td>$name</td><td>$tmp</td><td>$date2</td><td bgcolor="#FF0000">LOW</td>" $plik2
		    fi
        else
	    if [ -f "$plik2" ]
		then
		    echo RECOVERY $name
		    file "<td>$name</td><td>$tmp</td><td>$date2</td><td bgcolor="#00FF00">RECOVERY</td>" $plik
	    fi
        fi
    fi
    done
fi
else
	echo "mail off"
fi #last


