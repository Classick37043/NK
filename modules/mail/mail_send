#! /bin/bash 

dir=$( cd "$( dirname "$0" )" && cd ../../ && pwd )
date=`date +%y%m%d-%H%M`


onoff=`sqlite3 $dir/dbf/nettemp.db "SELECT mail FROM settings"`

if [ "$onoff" == "on" ]; then

dirs=$dir/tmp/mail
mkdir -p $dirs/hour
date2=`date +%Y%m%d-%H:%M`
get_mail=`sqlite3 $dir/dbf/nettemp.db "SELECT mail FROM recipient WHERE mail_alarm='yes'" | awk '{ printf " "$1 }'`

host=`sqlite3 $dir/dbf/nettemp.db "SELECT host FROM mail_settings"`
port=`sqlite3 $dir/dbf/nettemp.db "SELECT port FROM mail_settings"`
user=`sqlite3 $dir/dbf/nettemp.db "SELECT user FROM mail_settings"`
password=`sqlite3 $dir/dbf/nettemp.db "SELECT password FROM mail_settings"`
address=`sqlite3 $dir/dbf/nettemp.db "SELECT address FROM mail_settings"`

function send {
cat $1 | msmtp --maildomain=default --read-envelope-from --host=$host --port=$port --auth=on --user=$user \
    		    --passwordeval="sqlite3 $dir/dbf/nettemp.db 'SELECT password FROM mail_settings'"  \
    		    --tls=on --tls-starttls=on --tls-certcheck=off \
    		    --timeout=10 -t $get_mail
}

function file {
> $plik
echo "From: Nettemp Device <$user>" > $plik
echo "To: $get_mail" >> $plik
echo "Subject: Notification from nettemp" >> $plik
echo "" >> $plik
chmod 777 $plik
}


for line in `sqlite3 $dir/dbf/nettemp.db "SELECT * FROM sensors WHERE alarm='on'"| sed 's/ /_/g'`; 
    do
	    name=`echo $line | awk 'BEGIN {FS="|"}{print $2}'`
	    tmp=`echo $line | awk 'BEGIN {FS="|"}{print $4}'`
	    tmp_min=`echo $line | awk 'BEGIN {FS="|"}{print $5}'`
	    tmp_max=`echo $line | awk 'BEGIN {FS="|"}{print $6}'`
	    plik=$dirs/$name.mail
	    plik2=$dirs/hour/$name.mail
	
    if [ "$tmp" == "error" ]
    then
        file
        echo "Error in $name" >> $plik; 
    fi
    if [ -n "$tmp_max" ] || [ -n "$tmp_min" ] 
    then
        #cr_ge=$(echo $tmp >= $tmp_max | bc) #OLD BC
        cr_ge=$(echo $tmp $tmp_max | awk '{if ($1 > $2) print 1; else print 0 }')
        #cr_le=$(echo $tmp <= $tmp_min | bc) #OLD BC
        cr_le=$(echo $tmp $tmp_min | awk '{if ($1 < $2) print 1; else print 0 }')
        
        if  [ "$cr_ge" == "1" ]
        then
	if [ -n "$tmp_max" ]
	then
	    if [ ! -f "$plik2" ]
	    then
	    file
	    echo "High value in: $name $tmp C" >> $plik; 
	    if send $plik    
	    then
	    	    mv $plik $dirs/hour
	    fi
	    fi
	fi
        elif [ "$cr_le" == "1" ]
        then
	if [ -n "$tmp_min" ]
	then
	    if [ ! -f "$plik2" ]
	    then
	    file
	    echo "Low value in: $name $tmp C" >> $plik;
	    if send $plik    
	    then
	    	    mv $plik $dirs/hour
	    fi
	    fi
	fi
        else
	if [ -f "$plik2" ]
	then
	    file
	    echo "Recovery: $name $tmp C" >> $plik; 
	    if send $plik
	    then
	    rm $plik2
	    rm $plik
	    fi
	fi
        fi
    fi

    #clean if off
    if [ -z $tmp_max ] && [ -z $tmp_min ] && [ -e $dirs/hour/$name.mail ]
        then
	rm $dirs/hour/$name.mail
    fi

done 

else 
	echo "mail off"
fi #last


