#!/usr/bin/env python
#  
#  Skrypt stworzony na potrzeby nettemp.
#  Autor dise - dise@o2.pl
 
import RPi.GPIO as GPIO
import datetime
import sys
import signal
import time
import os
import sqlite3
 
############################################################################################################
 
pulseValue = 0
filelocation = "/var/www/nettemp/tmp/kwh/"
filename = "kwh_count_"
logfile = filelocation + filename
 
try:
        db = sqlite3.connect('/var/www/nettemp/dbf/nettemp.db')
        c = db.cursor()
        c.execute("SELECT gpio FROM gpio WHERE mode='kwh'")
        array=[r[0] for r in c.fetchall()]
        gpiopin = int(array[0]) # int gpiopin
 
        c.execute("SELECT rev FROM gpio WHERE gpio like ? ", (gpiopin,))
        array=[r[0] for r in c.fetchall()]
        rev = str(array[0]) # rev = 'on' - High to Low - FALLING
                        # rev = ' '  - Low  to High - RISING
        db.close()
       
except:
        print ("Blad wczytania danych z bazy netemp'a !! ")
        sys.exit(0)
 
# Ustawiamy GPIO zgodnie z tym co zaczytane z bazy
 
print gpiopin
print rev
 
GPIO.setmode(GPIO.BCM)
GPIO.setup(gpiopin, GPIO.IN, pull_up_down = GPIO.PUD_DOWN)
 
if rev == 'on' :  # ustawiamy detekcje odpowiednio z tym co w bazie
        gpioEvent1 = GPIO.FALLING
        gpioEvent2 = GPIO.RISING
else:
        gpioEvent1 = GPIO.RISING
        gpioEvent2 = GPIO.FALLING
 
######    Glowna petla programu  
 
while True:
 
        # Czekamy na zmiane stanu pinu...
        GPIO.wait_for_edge(gpiopin, gpioEvent1)
 
        # sprawdzamy czy plik juz utworzony w danej godzinie jesli tak dopisujemy wartosc jesli nie tworzymy nowy i resetujemy liczbe impulsow
        t = time.ctime()
        f = datetime.datetime.strptime(t, '%a %b %d %H:%M:%S %Y')
        print f.strftime('%y%m%d%H')
 
        filenameWithDate = logfile + f.strftime('%y%m%d%H')
 
        if os.path.isfile(filenameWithDate):
           pulseValue += 1
        else:
           pulseValue = 1
        # zapis do pliku wartosci impulsu
 
        f = open(filenameWithDate, 'w')
        f.write(str(pulseValue))
        f.write('\n')  
        f.close()
 
 
        # .... i znowu az pin powroci
        GPIO.wait_for_edge(gpiopin, gpioEvent2)
 
############################################################################################################